# Use postgres/example user/password credentials
version: '3.7'

services:
  proxy:
    image: nginx:${NGINX_RELEASE}
    container_name: ${ENV_NAME}_nginx
    restart: unless-stopped
    environment:
      NGINX_HOST: ${ENV_NAME}
      NGINX_PORT: ${NGINX_HOSTPORT}
    networks:
      - frontend
    volumes:
      - ./config/templates:/etc/nginx/templates
      - ./config/certs:/etc/nginx/certs
    ports:
      - ${NGINX_HOSTPORT}:${NGINX_HOSTPORT}
      - 443:443

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_RELEASE}
    container_name: ${ENV_NAME}_pgadmin
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - frontend
      - backend
    volumes:
      - pga_data:/var/lib/pgadmin

  postgres:
    image: postgres:${POSTGRES_RELEASE}
    container_name: ${ENV_NAME}_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ps_data:/var/lib/postgresql/data
    networks:
      - backend     

volumes:
  ps_data:
    name: ${ENV_NAME}_postgres
  pga_data:
    name: ${ENV_NAME}_pgadmin

networks:
  frontend:
    name: ${ENV_NAME}_frontend
  backend:
    name: ${ENV_NAME}_backend
